# This file is automatically generated from CMake from @DART_CONFIG_FILE@.in
# Include this file in CMakeLists.txt with 
# INCLUDE(${CMAKE_INSTALL_PREFIX}/share/dart/@DART_CONFIG_FILE@) 

###############################################################################
# Find DART
#
# This sets the following variables:
# DART_FOUND - True if DART was found.
# DART_INCLUDE_DIRS - Directories containing the DART include files.
# DART_LIBRARIES - Libraries needed to use DART.
# DART_LIBRARY_DIRS
# DART_DEFINITIONS - Compiler flags for DART.

find_package(PkgConfig)
pkg_check_modules(PC_DART dart)
set(DART_DEFINITIONS ${PC_DART_CFLAGS_OTHER})

SET( DART_ROOT_DIR "${CMAKE_CURRENT_LIST_DIR}/../.." )

SET(CMAKE_MODULE_PATH "/usr/share/dart/cmake")
message(STATUS "DART CMake Modules: ${CMAKE_MODULE_PATH}")

find_path(DART_INCLUDE_DIR kinematics/Skeleton.h planning/World.h
    HINTS ${PC_DART_INCLUDEDIR} ${PC_DART_INCLUDE_DIRS}
    PATHS ${DART_ROOT_DIR} ${DART_ROOT_DIR}/include ${DART_ROOT_DIR}/include/dart)    

find_path(DART_EIGEN_INCLUDE_DIR Eigen/Core
    HINTS ${PC_DART_INCLUDEDIR} ${PC_DART_INCLUDE_DIRS}
    PATHS ${DART_ROOT_DIR} ${DART_ROOT_DIR}/include/eigen-3.0.5/)    
    
find_path(CCD_INCLUDE_DIR ccd/ccd.h
    HINTS ${PC_DART_INCLUDEDIR} ${PC_DART_INCLUDE_DIRS}
    PATHS ${DART_ROOT_DIR} ${DART_ROOT_DIR}/include)
    
find_path(FCL_INCLUDE_DIR fcl/collision.h
    HINTS ${PC_DART_INCLUDEDIR} ${PC_DART_INCLUDE_DIRS}
    PATHS ${DART_ROOT_DIR} ${DART_ROOT_DIR}/include)

set(Boost_USE_MULTITHREADED      ON)
set(Boost_USE_STATIC_RUNTIME    OFF)
FIND_PACKAGE(Boost 1.42.0 REQUIRED)
add_definitions( -DBOOST_ALL_DYN_LINK )
set(DART_LIBRARY_DIRS "${DART_ROOT_DIR}/lib" ${Boost_LIBRARY_DIRS})

if(NOT MSVC)
    Find_Package(OpenGL REQUIRED)
    Find_Package(GLUT REQUIRED)
    set(DART_LIBRARIES ${DART_LIBRARIES} ${OPENGL_LIBRARIES} ${GLUT_glut_LIBRARY} ${GLU_LIBRARIES})
endif()

FIND_PACKAGE(Eigen3 REQUIRED)
include_directories(EIGEN3_INCLUDE_DIR)
message (STATUS "Eigen directory is ${EIGEN3_INCLUDE_DIR}")

SET( DART_LIBS parser urdfdom_model urdfdom_model_state urdfdom_sensor robotics  collision dynamics kinematics renderer utils tinyxml integration lcpsolver fcl )
FOREACH( DART_LIB ${DART_LIBS} )
    set(DART_LIBRARIES ${DART_LIBRARIES} optimized ${DART_LIB} debug ${DART_LIB}d)
ENDFOREACH(DART_LIB)

SET( DART_LIBS_NO_DEBUG assimp ccd )
FOREACH( DART_LIB ${DART_LIBS_NO_DEBUG} )
    set(DART_LIBRARIES ${DART_LIBRARIES} ${DART_LIB})
ENDFOREACH(DART_LIB)

set(DART_INCLUDE_DIRS ${DART_INCLUDE_DIR} ${DART_EIGEN_INCLUDE_DIR} ${CCD_INCLUDE_DIR} ${FCL_INCLUDE_DIR} ${Boost_INCLUDE_DIRS} ${GLUT_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIR})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(DART DEFAULT_MSG
    DART_LIBRARIES DART_INCLUDE_DIR DART_EIGEN_INCLUDE_DIR CCD_INCLUDE_DIR FCL_INCLUDE_DIR)

mark_as_advanced(DART_LIBRARY_DIRS DART_LIBRARIES DART_INCLUDE_DIR)


