# Include this file in CMakeLists.txt with 
# find_package(DART) 

###############################################################################
# Find DART
#
# This sets the following variables:
# DART_FOUND - True if DART was found.
# DART_INCLUDEDIR - Directories containing the DART include files.
# DART_LIBRARIES - Libraries needed to use DART.
# DART_DEFINITIONS - Compiler flags for DART.

set(SYS_INSTALL_PREFIX @CMAKE_INSTALL_PREFIX@)

find_package(PkgConfig QUIET)
if(PKG_CONFIG_FOUND)
   pkg_check_modules(PC_DART dart)
   set(DART_DEFINITIONS ${PC_DART_CFLAGS_OTHER})
endif()

find_path(DART_INCLUDEDIR kinematics/Skeleton.h
    PATHS ${PC_DART_INCLUDEDIR} ${SYS_INSTALL_PREFIX}/include
    PATH_SUFFIXES dart)    

if(EXISTS DART_INCLUDEDIR/kinematics/Skeleton.h)
    set(DART_FOUND TRUE)
endif()
   
set(DART_LIBRARY_DIRS "@SYS_INSTALL_PREFIX@/lib")

set(DART_LIBS parser planning robotics collision dynamics kinematics renderer utils integration lcpsolver)

if(MSVC OR MSVC90 OR MSVC10)
	foreach(DART_LIB ${DART_LIBS})
	    set(DART_LIBRARIES ${DART_LIBRARIES} optimized ${DART_LIB} debug ${DART_LIB}d)
	endforeach(DART_LIB)
	
	set(DART_LIBS_NO_DEBUG assimp ccd ${GLUT_LIBRARY} ${OPENGL_LIBRARY})
	foreach(DART_LIB ${DART_LIBS_NO_DEBUG})
        set(DART_LIBRARIES ${DART_LIBRARIES} ${DART_LIB})
    endforeach(DART_LIB)
elseif(UNIX)
    set(DART_LIBRARIES ${DART_LIBS})
endif()

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(DART DEFAULT_MSG DART_FOUND)

mark_as_advanced(DART_FOUND DART_LIBRARY_DIRS DART_INCLUDEDIR DART_LIBRARIES)

