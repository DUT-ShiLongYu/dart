# https://help.github.com/en/articles/workflow-syntax-for-github-actions

name: CI Linux

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - ".github/workflows/cache_*.yml"
      - "docker/dev/**"
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - ".github/workflows/cache_*.yml"
      - "docker/dev/**"
  schedule:
    # Cron syntax: [minute hour day_of_the_month month day_of_the_week]
    - cron: "0 2 * * 0,3" # Run every Sunday and Wednesday at 02:00

jobs:
  build_on_docker:
    if: github.event_name != 'workflow_dispatch'
    name: linux-docker-${{ matrix.os }}-${{ matrix.build_type }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Supported LTS versions
        os: [ubuntu-jammy, ubuntu-noble, archlinux]
        build_type: [Release]
        codecov: [OFF]
        check_format: [OFF]
        build_dartpy: [ON]
        include:
          # For code coverage report to Codecov
          - os: ubuntu-jammy
            build_type: Debug
            codecov: ON
            check_format: ON
            build_dartpy: ON
    env:
      # Hosted on: https://hub.docker.com/repository/docker/jslee02/dart-dev
      DART_DEV_IMAGE: jslee02/dart-dev
      DOCKER_TAG: ${{ matrix.os }}-v6.14
      PLATFORM: linux/amd64
      COMPILER: gcc
      BUILD_TYPE: ${{ matrix.build_type }}
      BUILD_DARTPY: "${{ matrix.build_dartpy }}"
      CODECOV: ${{ matrix.codecov }}
      CHECK_FORMAT: ${{ matrix.check_format }}
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Checkout
        uses: actions/checkout@v4
      - name: Pull dev container
        run: docker pull $DART_DEV_IMAGE:$DOCKER_TAG
      - name: Build
        run: |
          if [ "$CODECOV" = "ON" ]; then
            ci_env=`bash <(curl -s https://codecov.io/env)`
          fi
          docker run \
            $ci_env -e CI=true \
            --platform $PLATFORM \
            --volume $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
            --env-file ./.ci/docker/env.list \
            $DART_DEV_IMAGE:$DOCKER_TAG \
            /bin/sh -c "cd $GITHUB_WORKSPACE && ./.ci/build.sh"

  build_on_pixi:
    name: ubuntu-pixi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.5.1
        with:
          cache: true

      - name: Check Lint
        run: pixi run check-lint

      - name: Test DART and dartpy
        run: |
          pixi run test
          pixi run test_dartpy

