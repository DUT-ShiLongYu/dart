language: cpp
os:
  - linux
  #- osx
compiler:
  - gcc
  - clang
env:
  - BUILD_CORE_ONLY=OFF BUILD_TYPE=Debug
  - BUILD_CORE_ONLY=OFF BUILD_TYPE=Release
  - BUILD_CORE_ONLY=ON  BUILD_TYPE=Debug
  - BUILD_CORE_ONLY=ON  BUILD_TYPE=Release
matrix:
  exclude:
    - os: osx
      compiler: gcc
before_install:
  #- if [ "$TRAVIS_OS_NAME" = "linux" ]; then 'ci/before_install_linux.sh' ; fi
  #- if [ "$TRAVIS_OS_NAME" = "osx"   ]; then 'ci/before_install_osx.sh'   ; fi
  # Install boost 1.55 compatible with C++11
  - wget --quiet -O boost_1_55_0.tar.gz http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz/download
  - tar -xzf boost_1_55_0.tar.gz
  - cd boost_1_55_0/
  - sudo apt-get -qq update
  - sudo apt-get -qq install build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev 
  - ./bootstrap.sh --prefix=/usr/local &>/dev/null  # mute the output
  - n=`cat /proc/cpuinfo | grep "cpu cores" | uniq | awk '{print $NF}'`
  - sudo ./b2 --with=all -j $n install &>/dev/null  # mute the output
  - sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/local.conf'
  - sudo ldconfig
  - sudo add-apt-repository --yes ppa:dartsim/ppa
  - sudo apt-get -qq update
  - APT_CORE='cmake libassimp-dev libccd-dev libfcl-dev'
  - APT=$APT_CORE' freeglut3-dev libxi-dev libxmu-dev libflann-dev libnlopt-dev coinor-libipopt-dev libtinyxml-dev libtinyxml2-dev liburdfdom-dev liburdfdom-headers-dev libopenscenegraph-dev'
  - if [ $BUILD_CORE_ONLY = OFF ]; then sudo apt-get -qq --yes --force-yes install $APT; else sudo apt-get -qq --yes --force-yes install $APT_CORE; fi
  
install: 
  - mkdir build
  - cd build 
  - cmake -DBUILD_CORE_ONLY=$BUILD_CORE_ONLY -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then '../ci/script_linux.sh' ; fi
  - if [ "$TRAVIS_OS_NAME" = "osx"   ]; then '../ci/script_osx.sh'   ; fi
after_failure:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then '../ci/after_failure_linux.sh' ; fi
  - if [ "$TRAVIS_OS_NAME" = "osx"   ]; then '../ci/after_failure_osx.sh'   ; fi
