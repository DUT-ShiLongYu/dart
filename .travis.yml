language: cpp
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 'ci/before_install.sh'    ; fi
  - if [ "$TRAVIS_OS_NAME" = "osx"   ]; then 'ci/before_install_osx.sh'; fi
env:
  - BUILD_CORE_ONLY=OFF BUILD_TYPE=Debug
  - BUILD_CORE_ONLY=OFF BUILD_TYPE=Release
  - BUILD_CORE_ONLY=ON  BUILD_TYPE=Debug
  - BUILD_CORE_ONLY=ON  BUILD_TYPE=Release
matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: osx
      env: BUILD_CORE_ONLY=OFF
before_script: 
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cmake -DBUILD_CORE_ONLY=$BUILD_CORE_ONLY -DCMAKE_BUILD_TYPE=$BUILD_TYPE .; fi
  - if [ "$TRAVIS_OS_NAME" = "osx"   ]; then cmake -DBUILD_CORE_ONLY=$BUILD_CORE_ONLY -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDART_BUILD_UNITTESTS=OFF .; fi
script:
  - make
  - sudo ldconfig --verbose # So the test executeables can detect libtinyxml2
  - if [ $BUILD_CORE_ONLY = OFF ]; then make test; fi
  # - cd tools/
  # - ./code_check.sh
  # - ./abi_check.sh 4.1.0  # Check with DART 4.1.0
after_failure:
  - cat Testing/Temporary/LastTest.log
  - cat Testing/Temporary/LastTestsFailed.log
